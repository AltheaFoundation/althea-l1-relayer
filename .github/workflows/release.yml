name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cross
        run: cargo install cross
      - name: Build with cross
        run: cross build --release --target ${{ matrix.target }}
      - name: Rename binary for upload
        run: |
          EXT=""
          if [[ "${{ matrix.target }}" == *windows* ]]; then EXT=".exe"; fi
          mv target/${{ matrix.target }}/release/althea-l1-relayer$EXT althea-l1-relayer-${{ matrix.target }}$EXT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: althea-l1-relayer-${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}
          asset_name: althea-l1-relayer-${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}
          asset_content_type: application/octet-stream
